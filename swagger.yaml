openapi: 3.0.1
info:
  title: Books API
  description: basic CRUD API
  version: "1"
servers:
  - url: /
paths:
  /books:
    get:
      summary: Get all books
      operationId: list_books
      parameters:
        - name: authorName
          in: query
          description: Name of the author
          schema:
            type: string
        - name: rating
          in: query
          description: Book rating
          schema:
            type: number
      responses:
        "200":
          description: List of books
          content: {}
        "500":
          description: Unexpected error
          content: {}
    post:
      summary: Create a book
      operationId: post_book
      requestBody:
        description: Event payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postBookRequest'
        required: true
      responses:
        "200":
          description: Response data
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Unexpected error
          content: {}
  /books/{isbn}:
    get:
      summary: Get a book by ISBN
      operationId: get_book
      parameters:
        - name: isbn
          in: path
          description: ISBN of the book
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Book details
          content: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Unexpected error
          content: {}
    put:
      summary: Update a book by ISBN
      operationId: put_book
      parameters:
        - name: isbn
          in: path
          description: ISBN of the book
          required: true
          schema:
            type: string
      requestBody:
        description: Event payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putBookRequest'
        required: true
      responses:
        "200":
          description: Response data
          content: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Unexpected error
          content: {}
    delete:
      summary: Delete a book by ISBN
      operationId: delete_book
      parameters:
        - name: isbn
          in: path
          description: ISBN of the book
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Book deleted successfully
          content: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Unexpected error
          content: {}
components:
  schemas:
    Problem:
      required:
        - error
        - status
      type: object
      properties:
        error:
          type: string
        status:
          type: number
    postBookRequest:
      required:
        - authorName
        - bookName
        - isbn
        - rating
      type: object
      properties:
        isbn:
          type: string
        bookName:
          type: string
        authorName:
          type: string
        rating:
          maximum: 5
          minimum: 1
          type: number
      additionalProperties: false
    putBookRequest:
      type: object
      properties:
        bookName:
          type: string
        authorName:
          type: string
        rating:
          maximum: 5
          minimum: 1
          type: number
      additionalProperties: false
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
    Created:
      description: Created
      content: {}
